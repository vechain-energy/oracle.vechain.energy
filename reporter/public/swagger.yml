openapi: 3.0.3
info:
  title: Oracle API
  version: 1.0.0
servers:
  - url: "http://localhost:8787"
paths:
  /{feedId}:
    get:
      summary: get feed status and latest value
      parameters:
        - in: path
          name: feedId
          schema:
            type: string
            example: "vet-usd"
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/FeedStatus'
        '404':
          description: 'Not Found'
          content:
            application/json:
                schema:
                    $ref: '#/components/schemas/ResponseError'

    post:
      summary: add or update a feed configuration
      parameters:
        - in: path
          name: feedId
          schema:
            type: string
            example: "vet-usd"
          required: true
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/FeedConfiguration'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  id:
                    type: string
                    example: "vet-usd"
        '500':
          description: 'Error'
          content:
            application/json:
                schema:
                    $ref: '#/components/schemas/ResponseError'
      security:
        - authorization: []

    delete:
      summary: delete a feed
      parameters:
        - in: path
          name: feedId
          schema:
            type: string
            example: "vet-usd"
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      security:
        - authorization: []

  /{feedId}/signed?sender={sender}&data={data}:
    get:
      summary: get a signed response of the latest values
      description: "the response is an encoded (uint128 value, uint128 updatedAt, bytes32 feedId) abi encoded within (bytes response, uint64 validUntil, bytes signature). data can be passed on its signature proofs that it was signed by the oracles reporter."
      parameters:
        - in: path
          name: feedId
          schema:
            type: string
            example: "vet-usd"
          required: true
        - in: query
          name: sender
          schema:
            type: string
            example: "0x301aee1259f182636fadae08871269abe55f482c"
          required: true
        - in: query
          name: data
          schema:
            type: string
            example: "0x7665742d757364"
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: 
                 type: object
                 properties:
                  data:
                    type: string
                    example: "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000006578bb6900000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000006de5b002a000000000000000000000000000000000000000000000000000000006578ad540000000000000000000000000000000000000000000000000000000000000041152cab1cf1f5ebfecf9ddf1bdb7940aa41b512ee366222179d730197716d7ec822cbd8b54f790af7eb301143391115b06f87687027c4e4c2acd72035a45b0db31c00000000000000000000000000000000000000000000000000000000000000"
        '404':
          description: 'Not Found'
          content:
            application/json:
                schema:
                    $ref: '#/components/schemas/ResponseError'
        '500':
          description: 'Internal Errors'
          content:
            application/json:
                schema:
                    $ref: '#/components/schemas/ResponseError'

  /{feedId}/signed:
    post:
      summary: get a signed response of the latest values
      description: "the response is an encoded representation of latestValue(feedId) abi encoded with (bytes response, uint64 validUntil, bytes signature). data can be passed on its signature proofs that it was signed by the oracles reporter."
      parameters:
        - in: path
          name: feedId
          schema:
            type: string
            example: "vet-usd"
          required: true
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/RequestCCIP'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  id:
                    type: string
                    example: "vet-usd"
        '500':
          description: 'Error'
          content:
            application/json:
                schema:
                    $ref: '#/components/schemas/ResponseError'
components:
  securitySchemes:
    authorization:
      description: Authorization Token 
      type: apiKey
      name: x-api-key
      in: header
  schemas:
    FeedConfiguration:
     type: object
     properties:
        id:
          type: string
          example: "vet-usd"
        sources:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                example: "https://api.coinbase.com/v2/exchange-rates?currency=VET"
              path:
                type: string
                example: ".data.rates.USD"
        heartbeat:
          type: integer
          example: 3600
        deviationPoints:
          type: integer
          example: 100
        interval:
          type: integer
          example: 60
        contract:
          type: object
          properties:
            nodeUrl:
              type: string
              example: "https://node-testnet.vechain.energy"
            address:
              type: string
    RequestCCIP:
     type: object
     properties:
        sender:
          type: string
          example: "0xb7d72bd84bbf52aa1956c528d7dfbee318c826e8"
        callData:
          string: string
          example: "0x7665742d757364"
        urls:
          optional: true
          type: array
          items:
            type: string
            example: "http://localhost:8787/vet-usd"
        callbackFunction:
          optional: true
          type: string
          example: "0xd0c12da6"
        extraData:
          optional: true
          type: string
          example: "0x7665742d757364"
    FeedStatus:
       type: object
       properties:
           id:
             type: string
             example: "vet-usd"
           heartbeat:
             type: integer
             example: 3600
           deviationPoints:
             type: integer
             example: 100
           interval:
             type: integer
             example: 60
           nextUpdate:
              type: integer
              example: 60
              optional: true
           latestValue:
             type: object
             optional: true
             properties:
               id:
                 type: string
                 example: "vet-usd"
               value:
                 type: string
                 description: uint128 value
                 example: "29175281535"
               formattedValue:
                 type: string
                 description: parseUnits(value, 12)
                 example: "0.029175281535"
               updatedAt:
                 type: string
                 description: uint128 value
    ResponseError:
     type: object
     properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error Message"
